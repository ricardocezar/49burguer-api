// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id          Int   @id @default(autoincrement())
  cpf         String   @unique @db.VarChar(14)
  nome        String   @db.VarChar(50)
  email       String   @db.VarChar(100)
  ativo       Boolean  @default(true)
  criadoEm    DateTime @default(now()) @map("criado_em")
  atualizadoEm DateTime @updatedAt @map("atualizado_em")

  pedidos Pedido[]

  @@map("clientes")
}

enum Categoria {
  LANCHE
  ACOMPANHAMENTO
  BEBIDA
  SOBREMESA
}

model Produto {
  id             Int        @id @default(autoincrement())
  descricao      String     @db.VarChar(200)
  preco          Float
  categoria      Categoria
  ativo          Boolean    @default(true)
  criadoEm       DateTime   @default(now()) @map("criado_em")
  atualizadoEm   DateTime   @updatedAt @map("atualizado_em")

  itens         Item[]

  @@index([categoria])
  @@map("produtos")
}

enum StatusPedido {
  CRIADO
  RECEBIDO
  EM_PREPARACAO
  PRONTO
  FINALIZADO
  ENTREGUE
  CANCELADO
}

model Pedido {
  id            String       @id
  clienteId     Int?         @map("cliente_id")
  comanda       String?
  status        StatusPedido @default(CRIADO)
  dataCriado    DateTime     @default(now()) @map("data_criado")
  dataRecebido  DateTime?    @map("data_recebido")
  dataEmPreparo DateTime?    @map("data_em_preparo")
  dataFinalizado DateTime?   @map("data_finalizado")
  dataEntrega   DateTime?    @map("data_entrega")
  dataCancelado DateTime?    @map("data_cancelado")
  observacao    String?

  cliente       Cliente?     @relation(fields: [clienteId], references: [id])
  itens         Item[]
  
  @@index([status])
  @@map("pedidos")
}

model Item {
  id                Int     @id @default(autoincrement())
  pedidoId          String  @map("pedido_id")
  produtoId         Int     @map("produto_id")
  valorIndividual   Float   @map("valor_individual")
  quantidade        Int

  pedido            Pedido  @relation(fields: [pedidoId], references: [id])
  produto           Produto @relation(fields: [produtoId], references: [id])
  
  @@map("itens")
  @@unique([pedidoId, produtoId])
}
